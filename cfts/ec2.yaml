AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Infrastructure Template - Creates Launch Template and Autoscaling group resources
Parameters:
  pAvailabilityZones:
    Description: availability zones
    Type: String
    Default: us-east-1a
  pImageId:
    Description: ec2 ami id 
    Type: String 
    Default: ami-0ab4d1e9cf9a1215a
  pInstanceType:
    Description: ec2 instance type
    Type: String 
    Default: t2.micro
  pAutomationPath:
    Description: automation path
    Type: String

Resources:  
  rRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: S3_Bucket_Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action:
                  - 's3:DeleteObjectTagging'
                  - 's3:CreateBucket'  
                  - 's3:ListBucket'
                  - 's3:ListAllMyBuckets'
                  - 's3:DeleteBucketPolicy'   
                  - 's3:GetBucketPolicy'
                  - 's3:PutEncryptionConfiguration'
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:PutBucketTagging'
                  - 's3:PutLifecycleConfiguration'
                  - 's3:PutBucketPolicy'
                  - 's3:PutObjectTagging'
                  - 's3:DeleteObject'
                  - 's3:DeleteBucket'
                Resource: '*'
        - PolicyName: KMS_Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action:
                  - 'kms:Decrypt'
                  - 'kms:UntagResource'
                  - 'kms:GenerateDataKeyPairWithoutPlaintext'
                  - 'kms:ReEncryptFrom'
                  - 'kms:TagResource'
                  - 'kms:Encrypt'
                  - 'kms:GetKeyRotationStatus'
                  - 'kms:List*'
                  - 'kms:RevokeGrant'
                  - 'kms:GenerateDataKey'
                  - 'kms:ReEncryptTo'
                  - 'kms:DescribeKey'
                  - 'kms:CreateKey'
                  - 'kms:CreateGrant'
                Resource: '*'
        - PolicyName: EC2_Access_Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action:
                  - 'ec2:DetachVolume'
                  - 'ec2:AuthorizeSecurityGroupEgress'
                  - 'ec2:AuthorizeSecurityGroupIngress'
                  - 'ec2:DetachNetworkInterface'
                  - 'ec2:TerminateInstances'
                  - 'ec2:RequestSpotInstances'
                  - 'ec2:DeleteTags'
                  - 'ec2:CreateTags'
                  - 'ec2:Describe*'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:RunInstances'
                  - 'ec2:ModifyImageAttribute'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:CancelSpotInstanceRequests'
                  - 'ec2:DeleteVolume'
                  - 'ec2:CreateSecurityGroup'
                  - 'ec2:RevokeSecurityGroupEgress'
                  - 'ec2:DeleteSecurityGroup'
                  - 'ec2:ModifyInstanceAttribute'
                Resource: '*'
  rInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref rRole
  rSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH/HTTP access 
      GroupName: Java-app-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
  rEc2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: !Ref pAvailabilityZones
      IamInstanceProfile: !Ref rInstanceProfile
      ImageId: !Ref pImageId
      InstanceType: !Ref pInstanceType
      SecurityGroupIds:
        - !GetAtt rSecurityGroup.GroupId
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
            # install jq 
            sudo yum install jq -y
            sudo yum install git -y 
            sudo git clone https://github.com/${pAutomationPath}.git
            cd smartlife-jar/test/
            sudo chmod +x java.sh
            sh java.sh
